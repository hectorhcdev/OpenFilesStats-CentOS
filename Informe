Informe Práctica 6: Trabajo 2. 
Visualizar ficheros abiertos. 
Grupo_t3_43 01

Héctor Henríquez Cabrera
Miguel Ángel Medina Ramírez
Kevin Rosales Santana

a) Estrategia para resolver el problema
 Primero cogemos los usuarios que nos han pasado por parámetro (en caso de que se haya pasado una
 lista de éstos) y, después de comprobar que existen, se va buscando en el fd de los distintos 
 procesos del /proc y se extrae el descriptor de fichero (con 'stat -c "%N"' y cortando 
 el resultado para guardarlo en una variable) para comparar con la lista de usuarios que se nos 
 ha dado anteriormente si es necesario.
 
 Si éste coincide o si no se ha entregado una lista de usuarios, se le aumentará si está siendo 
 leído o escrito mediante los permisos que se encuentren en éste, además de anotar su propietario. 
 Todo esto lo guardaremos en un array asociativo debido a que es más eficiente. 
 (Sólo debe recorrer una vez la carpeta /proc)
 
 Una vez recorrido todo el /proc se imprimen todos los ficheros abiertos encontrados y que obviamente
 cumplan con los requisitos si se le ha añadido que se busque por usuarios. 
 
 A la hora de imprimir la lista de ficheros abiertos encontrados se señalará con una cabecera con un
 número para identificarlo y separadores para no mezclar la información extraída de
 uno en otro y además se especificará el nombre del fichero en cuestión con su ruta
 absoluta, número de procesos que lo están leyendo y escribiendo y el propietario de dicho fichero.

b) Opciones adicionales
 El enunciado no tenía ninguna opción adicional más allá de realizar la búsqueda por
 usuarios propietarios o por todos los ficheros abiertos.

c) Comprobación de correcto funcionamiento
 Se ha probado de varias maneras, como por ejemplo:
 -Dejar un proceso que lea y escriba un fichero que nadie tenga abierto y comprobar
 que el script muestre que en ese fichero se esté leyendo y escribiendo al menos por un proceso
 (el cual debería ser el que hemos lanzado).
 -Ejecutar el Script sin ningún argumento extra (Para todos los usuarios).
 -Ejecutar el Script con una serie de usuarios válidos.
 -Ejecutar el Script con usuarios no existentes y existentes y comprobar que se detiene
 su ejecución.
 -Ejecutar el Script con más o menos argumentos de los requeridos.
 -Ejecutar el Script con una lista de usuarios, pero con una opción distinta de '-u'.

d) Fallos pendientes por resolver
 Ninguno, pero si hubiese a llegar alguno en la ejecución debido a la estructura del
 /proc son controlados y continúa la ejecución. 
 Si es un fallo por argumentos o por usuarios no existentes se detiene.
